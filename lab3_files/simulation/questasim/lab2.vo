// Copyright (C) 2022  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 21.1.1 Build 850 06/23/2022 SJ Lite Edition"

// DATE "12/09/2022 22:05:08"

// 
// Device: Altera 5CSEMA4U23C6 Package UFBGA672
// 

// 
// This Verilog file should be used for QuestaSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module pll (
	refclk,
	rst,
	outclk_0,
	locked);
input 	refclk;
input 	rst;
output 	outclk_0;
output 	locked;

// Design Ports Information
// outclk_0	=>  Location: PIN_AH7,	 I/O Standard: 2.5 V,	 Current Strength: Default
// locked	=>  Location: PIN_AF4,	 I/O Standard: 2.5 V,	 Current Strength: Default
// refclk	=>  Location: PIN_E11,	 I/O Standard: 2.5 V,	 Current Strength: Default
// rst	=>  Location: PIN_AD10,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \~QUARTUS_CREATED_GND~I_combout ;
wire \refclk~input_o ;
wire \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_EXTSWITCHBUF ;
wire \rst~input_o ;
wire \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_CLKOUT ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI2 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI3 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI4 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI5 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI6 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI7 ;
wire \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_UP ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI1 ;
wire \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFTENM ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI0 ;
wire \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_CNTNEN ;
wire \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIGSHIFTEN5 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_TCLK ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH0 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH1 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH2 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH3 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH4 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH5 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH6 ;
wire \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH7 ;
wire \pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0_outclk ;
wire [0:0] \pll_inst|altera_pll_i|fboutclk_wire ;
wire [0:0] \pll_inst|altera_pll_i|locked_wire ;
wire [0:0] \pll_inst|altera_pll_i|outclk_wire ;

wire [7:0] \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus ;
wire [7:0] \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus ;
wire [8:0] \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_SHIFTEN_bus ;

assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH0  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [0];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH1  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [1];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH2  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [2];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH3  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [3];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH4  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [4];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH5  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [5];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH6  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [6];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH7  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus [7];

assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI0  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [0];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI1  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [1];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI2  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [2];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI3  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [3];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI4  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [4];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI5  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [5];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI6  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [6];
assign \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI7  = \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus [7];

assign \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIGSHIFTEN5  = \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_SHIFTEN_bus [5];

// Location: IOOBUF_X32_Y0_N93
cyclonev_io_obuf \outclk_0~output (
	.i(\pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0_outclk ),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(outclk_0),
	.obar());
// synopsys translate_off
defparam \outclk_0~output .bus_hold = "false";
defparam \outclk_0~output .open_drain_output = "false";
defparam \outclk_0~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOOBUF_X10_Y0_N93
cyclonev_io_obuf \locked~output (
	.i(\pll_inst|altera_pll_i|locked_wire [0]),
	.oe(vcc),
	.dynamicterminationcontrol(gnd),
	.seriesterminationcontrol(16'b0000000000000000),
	.parallelterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(locked),
	.obar());
// synopsys translate_off
defparam \locked~output .bus_hold = "false";
defparam \locked~output .open_drain_output = "false";
defparam \locked~output .shift_series_termination_control = "false";
// synopsys translate_on

// Location: IOIBUF_X15_Y61_N1
cyclonev_io_ibuf \refclk~input (
	.i(refclk),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\refclk~input_o ));
// synopsys translate_off
defparam \refclk~input .bus_hold = "false";
defparam \refclk~input .simulate_z_as = "z";
// synopsys translate_on

// Location: PLLREFCLKSELECT_X0_Y20_N0
cyclonev_pll_refclk_select \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT (
	.adjpllin(gnd),
	.cclk(gnd),
	.coreclkin(gnd),
	.extswitch(gnd),
	.iqtxrxclkin(gnd),
	.plliqclkin(gnd),
	.rxiqclkin(gnd),
	.clkin({gnd,gnd,gnd,\refclk~input_o }),
	.refiqclk(2'b00),
	.clk0bad(),
	.clk1bad(),
	.clkout(\pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_CLKOUT ),
	.extswitchbuf(\pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_EXTSWITCHBUF ),
	.pllclksel());
// synopsys translate_off
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_auto_clk_sw_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clk_loss_edge = "both_edges";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clk_loss_sw_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clk_sw_dly = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clkin_0_src = "clk_0";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_clkin_1_src = "ref_clk1";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_manu_clk_sw_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT .pll_sw_refclk_src = "clk_0";
// synopsys translate_on

// Location: IOIBUF_X10_Y0_N41
cyclonev_io_ibuf \rst~input (
	.i(rst),
	.ibar(gnd),
	.dynamicterminationcontrol(gnd),
	.o(\rst~input_o ));
// synopsys translate_off
defparam \rst~input .bus_hold = "false";
defparam \rst~input .simulate_z_as = "z";
// synopsys translate_on

// Location: FRACTIONALPLL_X0_Y14_N0
cyclonev_fractional_pll \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL (
	.coreclkfb(\pll_inst|altera_pll_i|fboutclk_wire [0]),
	.ecnc1test(\pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_EXTSWITCHBUF ),
	.ecnc2test(gnd),
	.fbclkfpll(gnd),
	.lvdsfbin(gnd),
	.nresync(\rst~input_o ),
	.pfden(gnd),
	.refclkin(\pll_inst|altera_pll_i|general[0].gpll~PLL_REFCLK_SELECT_O_CLKOUT ),
	.shift(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ),
	.shiftdonein(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ),
	.shiften(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFTENM ),
	.up(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_UP ),
	.zdb(gnd),
	.cntnen(\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_CNTNEN ),
	.fbclk(\pll_inst|altera_pll_i|fboutclk_wire [0]),
	.fblvdsout(),
	.lock(\pll_inst|altera_pll_i|locked_wire [0]),
	.mcntout(),
	.plniotribuf(),
	.shiftdoneout(),
	.tclk(\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_TCLK ),
	.mhi(\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_MHI_bus ),
	.vcoph(\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_VCOPH_bus ));
// synopsys translate_off
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .dsm_accumulator_reset_value = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .forcelock = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .mimic_fbclk_type = "none";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .nreset_invert = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .output_clock_frequency = "300.0 mhz";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_atb = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_bwctrl = 4000;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_cmp_buf_dly = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_cp_comp = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_cp_current = 10;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ctrl_override_setting = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_dsm_dither = "disable";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_dsm_out_sel = "disable";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_dsm_reset = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ecn_bypass = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ecn_test_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_enable = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fbclk_mux_1 = "glb";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fbclk_mux_2 = "m_cnt";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fractional_carry_out = 32;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fractional_division = 1;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fractional_division_string = "'0'";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_fractional_value_ready = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_lf_testen = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_lock_fltr_cfg = 25;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_lock_fltr_test = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_bypass_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_coarse_dly = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_fine_dly = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_hi_div = 6;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_in_src = "ph_mux_clk";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_lo_div = 6;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_odd_div_duty_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_ph_mux_prst = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_m_cnt_prst = 1;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_bypass_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_coarse_dly = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_fine_dly = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_hi_div = 1;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_lo_div = 1;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_n_cnt_odd_div_duty_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ref_buf_dly = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_reg_boost = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_regulator_bypass = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_ripplecap_ctrl = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_slf_rst = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_tclk_mux_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_tclk_sel = "n_src";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_test_enable = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_testdn_enable = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_testup_enable = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_unlock_fltr_cfg = 2;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_div = 2;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph0_en = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph1_en = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph2_en = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph3_en = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph4_en = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph5_en = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph6_en = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vco_ph7_en = "true";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .pll_vctrl_test_voltage = 750;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .reference_clock_frequency = "50.0 mhz";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccd0g_atb = "disable";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccd0g_output = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccd1g_atb = "disable";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccd1g_output = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccm1g_tap = 2;
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vccr_pd = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .vcodiv_override = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL .fractional_pll_index = 0;
// synopsys translate_on

// Location: PLLRECONFIG_X0_Y18_N0
cyclonev_pll_reconfig \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG (
	.atpgmode(gnd),
	.clk(gnd),
	.cntnen(\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_CNTNEN ),
	.fpllcsrtest(gnd),
	.iocsrclkin(gnd),
	.iocsrdatain(gnd),
	.iocsren(gnd),
	.iocsrrstn(gnd),
	.mdiodis(gnd),
	.phaseen(gnd),
	.read(gnd),
	.rstn(gnd),
	.scanen(gnd),
	.sershiftload(gnd),
	.shiftdonei(gnd),
	.updn(gnd),
	.write(gnd),
	.addr(6'b000000),
	.byteen(2'b00),
	.cntsel(5'b00000),
	.din(16'b0000000000000000),
	.mhi({\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI7 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI6 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI5 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI4 ,
\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI3 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI2 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI1 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_MHI0 }),
	.blockselect(),
	.iocsrdataout(),
	.iocsrenbuf(),
	.iocsrrstnbuf(),
	.phasedone(),
	.shift(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ),
	.shiftenm(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFTENM ),
	.up(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_UP ),
	.dout(),
	.dprioout(),
	.shiften(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_SHIFTEN_bus ));
// synopsys translate_off
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG .fractional_pll_index = 0;
// synopsys translate_on

// Location: PLLOUTPUTCOUNTER_X0_Y18_N1
cyclonev_pll_output_counter \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER (
	.cascadein(gnd),
	.nen0(\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_CNTNEN ),
	.shift0(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_SHIFT ),
	.shiftdone0i(gnd),
	.shiften(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIGSHIFTEN5 ),
	.tclk0(\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_TCLK ),
	.up0(\pll_inst|altera_pll_i|general[0].gpll~PLL_RECONFIG_O_UP ),
	.vco0ph({\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH7 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH6 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH5 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH4 ,
\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH3 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH2 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH1 ,\pll_inst|altera_pll_i|general[0].gpll~FRACTIONAL_PLL_O_VCOPH0 }),
	.cascadeout(),
	.divclk(\pll_inst|altera_pll_i|outclk_wire [0]),
	.shiftdone0o());
// synopsys translate_off
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_coarse_dly = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_fine_dly = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_in_src = "ph_mux_clk";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_ph_mux_prst = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .c_cnt_prst = 1;
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .cnt_fpll_src = "fpll_0";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .dprio0_cnt_bypass_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .dprio0_cnt_hi_div = 75;
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .dprio0_cnt_lo_div = 75;
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .dprio0_cnt_odd_div_even_duty_en = "false";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .duty_cycle = 50;
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .output_clock_frequency = "2.0 mhz";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .phase_shift = "0 ps";
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .fractional_pll_index = 0;
defparam \pll_inst|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER .output_counter_index = 5;
// synopsys translate_on

// Location: CLKCTRL_G2
cyclonev_clkena \pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0 (
	.inclk(\pll_inst|altera_pll_i|outclk_wire [0]),
	.ena(vcc),
	.outclk(\pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0_outclk ),
	.enaout());
// synopsys translate_off
defparam \pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .clock_type = "global clock";
defparam \pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .disable_mode = "low";
defparam \pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .ena_register_mode = "always enabled";
defparam \pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .ena_register_power_up = "high";
defparam \pll_inst|altera_pll_i|outclk_wire[0]~CLKENA0 .test_syn = "high";
// synopsys translate_on

// Location: LABCELL_X7_Y9_N0
cyclonev_lcell_comb \~QUARTUS_CREATED_GND~I (
// Equation(s):

	.dataa(gnd),
	.datab(gnd),
	.datac(gnd),
	.datad(gnd),
	.datae(gnd),
	.dataf(gnd),
	.datag(gnd),
	.cin(gnd),
	.sharein(gnd),
	.combout(\~QUARTUS_CREATED_GND~I_combout ),
	.sumout(),
	.cout(),
	.shareout());
// synopsys translate_off
defparam \~QUARTUS_CREATED_GND~I .extended_lut = "off";
defparam \~QUARTUS_CREATED_GND~I .lut_mask = 64'h0000000000000000;
defparam \~QUARTUS_CREATED_GND~I .shared_arith = "off";
// synopsys translate_on


altera_pll_reconfig_tasks pll_reconfig_inst_tasks();
// synopsys translate_off
defparam pll_reconfig_inst_tasks .number_of_fplls = 1;
// synopsys translate_on

endmodule
